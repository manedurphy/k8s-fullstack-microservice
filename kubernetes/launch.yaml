# Reviews Web Service
apiVersion: v1
kind: ConfigMap
metadata:
  name: reviews-db-config

data:
  PG_USER: manedurphy
  PG_PASSWORD: password1234
  PG_DB: reviews
  HOST: pg-reviews
---
apiVersion: v1
kind: Service
metadata:
  name: reviews-service

spec:
  type: ClusterIP
  selector:
    app: reviews-api
  ports:
    - port: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reviews-deployment

spec:
  replicas: 1
  template:
    metadata:
      name: reviews-api
      labels:
        app: reviews-api
    spec:
      containers:
      - name: reviews-api-container
        image: k8s/reviews-service:latest
        imagePullPolicy: Never
        # image: manedurphy/reviews-service
        resources:
          requests:
            memory: "64Mi"
            cpu: "60m"
          limits:
            memory: "256Mi"
            cpu: "1000m"
        envFrom:
        - configMapRef:
            name: reviews-db-config
  selector:
    matchLabels:
      app: reviews-api
---
# Servier-Side Rendering Service
apiVersion: v1
kind: Service
metadata:
  name: ssr-service

spec:
  type: ClusterIP
  selector:
    app: ssr
  ports:
    - port: 6002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssr-deployment

spec:
  replicas: 1
  template:
    metadata:
      name: ssr
      labels:
        app: ssr
    spec:
      containers:
      - name: ssr-container
        # image: manedurphy/ssr-service
        image: k8s/ssr-service:latest
        imagePullPolicy: Never
        resources:
          requests:
            memory: "64Mi"
            cpu: "75m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        env:
        - name: GO_DOMAIN
          value: http://localhost:6003/api/
        - name: READ_REDIS_URL
          value: 'redis://replica:6379/0'
        - name: WRITE_REDIS_URL
          value: 'redis://primary:6379/0'

      - name: go-container
        # image: manedurphy/go-get-data-service
        image: k8s/go-get-data-service:latest
        imagePullPolicy: Never
        resources:
          requests:
            memory: "64Mi"
            cpu: "125m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        env:
        - name: REVIEWS_DOMAIN
          value: http://reviews-service:5002/api/reviews/all/
          
  selector:
    matchLabels:
      app: ssr
---
# Client/Proxy Service
apiVersion: v1
kind: Service
metadata:
  name: client-service

spec:
  type: LoadBalancer
  selector:
    app: client
  ports:
    - port: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment

spec:
  replicas: 1
  template:
    metadata:
      name: client
      labels:
        app: client
    spec:
      containers:
      - name: client-container
        # image: manedurphy/client-service
        image: k8s/client-service:latest
        imagePullPolicy: Never
        resources:
          requests:
            memory: "64Mi"
            cpu: "60m"
          limits:
            memory: "128Mi"
            cpu: "500m"
  selector:
    matchLabels:
      app: client
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: client-ingress
spec:
  rules:
  - http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: client-service
              port:
                number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: primary
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
    name: redis
  selector:
    name: redis-primary
---
apiVersion: v1
kind: Service
metadata:
  name: replica
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 6379
    targetPort: 6379
    name: redis
  selector:
    name: redis-replica
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: primary-deployment
  labels:
    name: redis-primary
spec:
  replicas: 1 
  selector:
    matchLabels:
      name: redis-primary
  template:
    metadata:
      labels:
        name: redis-primary
    spec:
      subdomain: primary
      containers:
      - name: redis
        image: redis:6.0-alpine
        command:
          - "redis-server"
        args:
          - "--protected-mode"
          - "no"
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: replica-deployment
  labels:
    name: redis-replica
spec:
  replicas: 2 
  selector:
    matchLabels:
      name: redis-replica
  template:
    metadata:
      labels:
        name: redis-replica
    spec:
      subdomain: replica
      containers:
      - name: redis
        image: redis:6.0-alpine
        command:
          - "redis-server"
        args:
          - "--replicaof"
          - "primary.default.svc.cluster.local"
          - "6379"
          - "--protected-mode"
          - "no"   
        ports:
        - containerPort: 6379